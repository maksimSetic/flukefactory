[{"C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\index.js":"1","C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\App.js":"2","C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\reportWebVitals.js":"3","C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\Components\\navbar\\Navbar.js":"4","C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\Components\\header\\Header.js":"5","C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\Components\\brands\\Brand.js":"6","C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\Components\\brands\\imports.js":"7","C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\Components\\whatisfluke\\Whatisfluke.js":"8","C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\Components\\feature\\Feature.js":"9","C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\Components\\clock\\Clock.js":"10"},{"size":535,"mtime":1650977516684,"results":"11","hashOfConfig":"12"},{"size":502,"mtime":1650983458130,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1650977517106,"results":"14","hashOfConfig":"12"},{"size":1856,"mtime":1650978975653,"results":"15","hashOfConfig":"12"},{"size":852,"mtime":1650985214153,"results":"16","hashOfConfig":"12"},{"size":756,"mtime":1650981485878,"results":"17","hashOfConfig":"12"},{"size":568,"mtime":1650980654274,"results":"18","hashOfConfig":"12"},{"size":906,"mtime":1650982399164,"results":"19","hashOfConfig":"12"},{"size":399,"mtime":1650981960571,"results":"20","hashOfConfig":"12"},{"size":2137,"mtime":1650984588219,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"9yesbj",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\index.js",[],[],[],"C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\App.js",[],[],"C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\reportWebVitals.js",[],[],"C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\Components\\navbar\\Navbar.js",["57"],[],"import React, { useState } from 'react';\r\nimport { RiMenu3Line, RiCloseLine } from 'react-icons/ri';\r\n\r\nimport './navbar.css';\r\nimport flukebaby from '../../assets/flukebaby.png';\r\n\r\nconst Navbar = () => {\r\n  const [toggleMenu, setToggleMenu] = useState(false);\r\n\r\n  return (\r\n    <div className=\"gpt3__navbar\">\r\n      <div className=\"gpt3__navbar-links\">\r\n        <div className=\"gpt3__navbar-links_logo\">\r\n          <img src={flukebaby} />\r\n        </div>\r\n        <div className=\"gpt3__navbar-links_container\">\r\n          <p><a href=\"#home\">Home</a></p>\r\n          <p><a href=\"#wgpt3\">What is Fluke Factory?</a></p>\r\n          <p><a href=\"#possibility\">Games</a></p>\r\n          <p><a href=\"#features\">Art</a></p>\r\n          <p><a href=\"#blog\">Music</a></p>\r\n        </div>\r\n      </div>\r\n      <div className=\"gpt3__navbar-sign\">\r\n        <p>Sign in</p>\r\n        <button type=\"button\">Sign up</button>\r\n      </div>\r\n      <div className=\"gpt3__navbar-menu\">\r\n        {toggleMenu\r\n          ? <RiCloseLine color=\"#fff\" size={27} onClick={() => setToggleMenu(false)} />\r\n          : <RiMenu3Line color=\"#fff\" size={27} onClick={() => setToggleMenu(true)} />}\r\n        {toggleMenu && (\r\n        <div className=\"gpt3__navbar-menu_container scale-up-center\">\r\n          <div className=\"gpt3__navbar-menu_container-links\">\r\n            <p><a href=\"#home\">Home</a></p>\r\n            <p><a href=\"#wgpt3\">What is GPT3?</a></p>\r\n            <p><a href=\"#possibility\">Open AI</a></p>\r\n            <p><a href=\"#features\">Case Studies</a></p>\r\n            <p><a href=\"#blog\">Library</a></p>\r\n          </div>\r\n          <div className=\"gpt3__navbar-menu_container-links-sign\">\r\n            <p>Sign in</p>\r\n            <button type=\"button\">Sign up</button>\r\n          </div>\r\n        </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\Components\\header\\Header.js",["58","59"],[],"import React from 'react';\r\nimport people from '../../assets/people.png';\r\nimport headerpic2 from '../../assets/headerpic2.png';\r\nimport './header.css';\r\n\r\nconst Header = () => (\r\n  <div className=\"gpt3__header section__padding\" id=\"home\">\r\n    <div className=\"gpt3__header-content\">\r\n      <h1 className=\"gradient__text\">Dive right onto </h1>\r\n      <div className=\"gpt3__header-content__input\">\r\n        <input type=\"email\" placeholder=\"Your Email Address\" />\r\n        <button type=\"button\">Join our Discord!</button>\r\n      </div>\r\n\r\n      <div className=\"gpt3__header-content__people\">\r\n        <img src={people} />\r\n        <p>1,600 people requested access a visit in last 24 hours</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"gpt3__header-image\">\r\n      <img src={headerpic2} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\n\r\n\r\nexport default Header;\r\n","C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\Components\\brands\\Brand.js",["60","61","62","63"],[],"import React from 'react';\r\nimport { github, linkedin, youtube, instagram } from './imports';\r\nimport './brand.css';\r\n\r\nconst Brand = () => (\r\n  <div className=\"gpt3__brand section__padding\">\r\n    <div>\r\n     <a target=\"blank\" href=\"https://www.youtube.com/channel/UCQ0FEKIwfm9mf27FPoI7-Fw\"><img  src={youtube} /> </a>\r\n    </div>\r\n\r\n    <div>\r\n      <a target=\"blank\" href=\"https://www.linkedin.com/in/luka-habu%C5%A1-14639b20a/\"><img src={linkedin} /> </a>\r\n    </div>\r\n    <div>\r\n    <a target=\"blank\" href=\"https://www.instagram.com/lukahabus/\"><img src={instagram} /></a>\r\n    </div>\r\n    <div>\r\n    <a target=\"blank\" href=\"https://github.com/Ficiao/WiaP-Head-in-the-Clouds\"> <img src={github} /></a>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Brand;","C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\Components\\brands\\imports.js",[],[],"C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\Components\\whatisfluke\\Whatisfluke.js",[],[],"C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\Components\\feature\\Feature.js",[],[],"C:\\Users\\Mirela\\Desktop\\React stuff\\flukefactorial\\flukefactorial\\src\\Components\\clock\\Clock.js",["64"],[],"\r\nimport './clock.css';\r\nimport  { useState, useEffect, useRef } from 'react';\r\n\r\nimport React from 'react'\r\n\r\nconst Clock = () => {\r\n  const [timerDays, setTimerDays] = useState('00');\r\n  const [timerHours, setTimerHours] = useState('00');\r\n  const [timerMinutes, setTimerMinutes] = useState('00');\r\n  const [timerSeconds, setTimerSeconds] = useState('00');\r\n\r\n  let interval = useRef();\r\n\r\n  const startTimer = () => {\r\n    const countdownDate = new Date(' May 28 2022 00:00:00').getTime();\r\n\r\n    interval = setInterval(() => {\r\n      const now = new Date().getTime();\r\n      const distance = countdownDate - now;\r\n\r\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor((distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)));\r\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n      if (distance < 0) {\r\n        //stop our timer\r\n          clearInterval(interval.current);\r\n      } else {\r\n        //update timer\r\n        setTimerDays(days);\r\n        setTimerHours(hours);\r\n        setTimerMinutes(minutes);\r\n        setTimerSeconds(seconds);\r\n      }\r\n\r\n    }, 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    startTimer();\r\n\r\n    return () => {\r\n      clearInterval(interval.current);\r\n    };\r\n  });\r\n\r\n\r\n  return (\r\n\r\n\r\n  <section className=\"timer-container\">\r\n <h2 className=\"headingintheclouds\">Head in the Clouds!</h2>\r\n    <section className=\"timer\">\r\n\r\n      <div className=\"clockbox\">\r\n\r\n        <section>\r\n          <p>{timerDays}</p>\r\n          <p><small>Days</small></p>\r\n        </section>\r\n        <span>:</span>\r\n        <section>\r\n          <p>{timerHours}</p>\r\n          <p><small>Hours</small></p>\r\n        </section>\r\n        <span>:</span>\r\n        <section>\r\n          <p>{timerMinutes}</p>\r\n          <p><small>Minutes</small></p>\r\n        </section>\r\n        <span>:</span>\r\n        <section>\r\n          <p>{timerSeconds}</p>\r\n          <p><small>Seconds</small></p>\r\n        </section>\r\n      </div>\r\n    </section>\r\n  \r\n  </section>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Clock;\r\n",{"ruleId":"65","severity":1,"message":"66","line":14,"column":11,"nodeType":"67","endLine":14,"endColumn":34},{"ruleId":"65","severity":1,"message":"66","line":16,"column":9,"nodeType":"67","endLine":16,"endColumn":29},{"ruleId":"65","severity":1,"message":"66","line":22,"column":7,"nodeType":"67","endLine":22,"endColumn":31},{"ruleId":"65","severity":1,"message":"66","line":8,"column":88,"nodeType":"67","endLine":8,"endColumn":110},{"ruleId":"65","severity":1,"message":"66","line":12,"column":87,"nodeType":"67","endLine":12,"endColumn":109},{"ruleId":"65","severity":1,"message":"66","line":15,"column":67,"nodeType":"67","endLine":15,"endColumn":90},{"ruleId":"65","severity":1,"message":"66","line":18,"column":81,"nodeType":"67","endLine":18,"endColumn":101},{"ruleId":"68","severity":1,"message":"69","line":45,"column":30,"nodeType":"70","endLine":45,"endColumn":37},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","The ref value 'interval.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'interval.current' to a variable inside the effect, and use that variable in the cleanup function.","Identifier"]